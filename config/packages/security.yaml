# config/packages/security.yaml
security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    # password_hashers:
        # Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser:
            algorithm: auto
            cost: 15
    providers:
        # app_user_provider:
        #         entity:
        #             class: App\Entity\User
        #             property: username
        users_in_memory:
            memory:
                users:
                    cogitech:
                        password: '$2a$15$m6WJ8E5SoM7JJ/DkD4t0fekApCvg0LahnSHCXf2pc//lbH7MXbI/O' # hashed password for 'pass123'
                        roles: ['ROLE_USER'] 
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/lista, roles: ROLE_USER }