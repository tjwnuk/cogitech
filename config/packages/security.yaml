# config/packages/security.yaml
security:
    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser:
            algorithm: auto
            cost: 15
    providers:
        users_in_memory:
            memory:
                users:
                    cogitech:
                        password: '$2a$15$YElAuP6JbIhVH3IfwLBa2.Uwmz/biYvEkIgbJH5SeqN0exknYmtne' # hashed password for 'pass123'
                        roles: ['ROLE_USER']
                    admin:
                        password: '$2a$15$ycziT1blWw6W3FeJbEjxWO2rAqHpJ9SKXhFVat1LG3Ox/n0hXPP92' # hashed password for 'adminpass'
                        roles: ['ROLE_ADMIN','ROLE_USER']
                        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/lista, roles: [ROLE_USER, ROLE_ADMIN] }
        - { path: ^/lista/delete, roles: [ROLE_USER, ROLE_ADMIN] }